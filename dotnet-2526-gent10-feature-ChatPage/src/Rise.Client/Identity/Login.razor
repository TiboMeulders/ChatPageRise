@page "/login"

<PageTitle>Login</PageTitle>

<AuthorizeView>
    <Authorized Context="authContext">
        <div class="notification">You're logged in as @authContext.User.Identity?.Name.</div>
        <div><strong>With the following claims:</strong>
            <div class="fixed-grid has-2-cols">
                <div class="grid is-gap-1">
                    <div class="cel"><strong>Type</strong></div>
                    <div class="cel"><strong>Value</strong></div>
                    @foreach (var claim in authContext.User.Claims)
                    {
                        <div class="cel">@claim.Type</div>
                        <div class="cel">@claim.Value</div>
                    }
                </div>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="container">
            @foreach (var error in _result.Errors)
            {
                <div class="notification is-danger">@error</div>
            }
        <div class="columns is-centered">
            <section class="column is-one-third">
                <EditForm Model="Model" OnValidSubmit="LoginUser" Context="formContext">
                    <FluentValidationValidator/>
                    <div class="field">
                        <p class="control has-icons-left has-icons-right">
                            <InputText @bind-Value="Model.Email" type="email" autocomplete="username" class="input" placeholder="Email"/>
                            <span class="icon is-small is-left">
                                <i class="fas fa-envelope"></i>
                            </span>
                        </p>
                        <ValidationMessage For="() => Model.Email" class="has-text-danger"/>
                    </div>
                    <div class="field">
                        <p class="control has-icons-left">
                            <InputText @bind-Value="Model.Password" class="input" type="password" placeholder="Password"/>
                            <span class="icon is-small is-left">
                                <i class="fas fa-lock"></i>
                            </span>
                        </p>
                        <ValidationMessage For="() => Model.Password" class="has-text-danger"/>
                    </div>
                    <div class="field is-grouped is-grouped-right">
                        <p class="control">
                            <button class="button is-light">Login</button>
                        </p>
                        <p class="control">
                            <a href="register" class="button is-light">Register</a>
                        </p>
                    </div>
                </EditForm>
            </section>
        </div>
    </div>

    </NotAuthorized>
</AuthorizeView>