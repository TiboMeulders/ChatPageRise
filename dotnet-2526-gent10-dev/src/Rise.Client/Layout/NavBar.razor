@using Rise.Client.Services
@inject NavBarVisibilityService NavBarVisibility
@implements IDisposable

@if (NavBarVisibility.IsVisible)
{
<nav class="fixed bottom-0 left-0 right-0 bg-orange-200 rounded-[35px] shadow-lg z-50 mb-2 mx-4" role="navigation" aria-label="main navigation">
    <div class="flex justify-around items-center py-2 px-2">
        <NavLink class="flex flex-col items-center justify-center p-2" href="/profile" Match="NavLinkMatch.All" ActiveClass="active-nav-item">
            <img src="/icons/profile.svg" alt="Profile" class="w-10 h-10 nav-icon">
        </NavLink>

        <NavLink class="flex flex-col items-center justify-center p-2" href="chat" ActiveClass="active-nav-item">
            <img src="/icons/chat.svg" alt="Chat" class="w-10 h-10 nav-icon">
        </NavLink>

        <NavLink class="flex flex-col items-center justify-center p-2" href="/homepage" Match="NavLinkMatch.All" ActiveClass="active-nav-item">
            <img src="/icons/home.svg" alt="Home" class="w-10 h-10 nav-icon">
        </NavLink>

        <NavLink class="flex flex-col items-center justify-center p-2" href="events" ActiveClass="active-nav-item">
            <img src="/icons/events.svg" alt="Events" class="w-10 h-10 nav-icon">
        </NavLink>

        <NavLink class="flex flex-col items-center justify-center p-2" href="games" ActiveClass="active-nav-item">
            <img src="/icons/games.svg" alt="Games" class="w-10 h-10 nav-icon">
        </NavLink>
    </div>
</nav>
}

<style>
    .nav-icon {
        transition: all 0.2s ease;
        width: 2.5rem;
        height: 2.5rem;
    }

    .active-nav-item .nav-icon {
        width: 2.75rem;
        height: 2.75rem;
        transform: scale(1.1);
    }
</style>

@code {
protected override void OnInitialized()
{
    NavBarVisibility.OnChange += StateHasChanged;
}

public void Dispose()
{
    NavBarVisibility.OnChange -= StateHasChanged;
}
}
